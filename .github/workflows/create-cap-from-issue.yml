name: Create CAP folder and README from Issue

on:
  issues:
    types: [opened]

jobs:
  generate-cap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate CAP folder and README
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          CAP_NUMBER=$(printf "%04d" ${{ github.event.issue.number }})
          FOLDER="CAP-${CAP_NUMBER}"
          FILE_PATH="${FOLDER}/README.md"
          DATE=$(date +%Y-%m-%d)

          mkdir -p "$FOLDER"

          # Extract key fields from the issue body
          TITLE=$(echo "$ISSUE_BODY" | awk -F': ' '/### Title/{getline; print}' | xargs)
          CATEGORY=$(echo "$ISSUE_BODY" | awk -F': ' '/### Category/{getline; print}' | xargs)
          IMPLEMENTORS=$(echo "$ISSUE_BODY" | awk -F': ' '/### Implementors/{getline; print}' | xargs)
          SOLUTION_TO=$(echo "$ISSUE_BODY" | awk -F': ' '/### Solution-To/{getline; print}' | xargs)
          DISCUSSIONS=$(echo "$ISSUE_BODY" | awk -F': ' '/### Discussions/{getline; print}' | xargs)
          ABSTRACT=$(echo "$ISSUE_BODY" | awk -F': ' '/### Abstract/{getline; print}' | xargs)
          MOTIVATION=$(echo "$ISSUE_BODY" | awk -F': ' '/### Motivation/{getline; print}' | xargs)
          SPECIFICATION=$(echo "$ISSUE_BODY" | awk -F': ' '/### Amendment Specification/{getline; print}' | xargs)
          RATIONALE=$(echo "$ISSUE_BODY" | awk -F': ' '/### Rationale/{getline; print}' | xargs)
          ACCEPTANCE=$(echo "$ISSUE_BODY" | awk -F': ' '/### Path to Ratification/{getline; print}' | xargs)
          IMPLEMENTATION=$(echo "$ISSUE_BODY" | awk -F': ' '/### Implementation Plan/{getline; print}' | xargs)
          VERSIONING=$(echo "$ISSUE_BODY" | awk -F': ' '/### Versioning/{getline; print}' | xargs)
          REFERENCES=$(echo "$ISSUE_BODY" | awk -F': ' '/### References/{getline; print}' | xargs)

          # Default empty fields to "N/A" where appropriate
          [ -z "$CATEGORY" ] && CATEGORY="Governance"
          [ -z "$IMPLEMENTORS" ] && IMPLEMENTORS="N/A"
          [ -z "$SOLUTION_TO" ] && SOLUTION_TO="N/A"
          [ -z "$DISCUSSIONS" ] && DISCUSSIONS="N/A"
          [ -z "$ABSTRACT" ] && ABSTRACT="N/A"
          [ -z "$MOTIVATION" ] && MOTIVATION="N/A"
          [ -z "$SPECIFICATION" ] && SPECIFICATION="N/A"
          [ -z "$RATIONALE" ] && RATIONALE="N/A"
          [ -z "$ACCEPTANCE" ] && ACCEPTANCE="N/A"
          [ -z "$IMPLEMENTATION" ] && IMPLEMENTATION="N/A"
          [ -z "$VERSIONING" ] && VERSIONING="N/A"
          [ -z "$REFERENCES" ] && REFERENCES="N/A"

          # Write CAP file
          cat > "$FILE_PATH" <<EOF
---
CAP: ${CAP_NUMBER}
Title: "${TITLE}"
Category: ${CATEGORY}
Status: Draft
Authors:
  - TBD
Implementors: ${IMPLEMENTORS}
Solution-To:
  - ${SOLUTION_TO}
Discussions:
  - ${DISCUSSIONS}
Created: ${DATE}
License: CC-BY-4.0
---

## Abstract

${ABSTRACT}

## Motivation: Why is this CAP necessary?

${MOTIVATION}

## Amendment Specification

${SPECIFICATION}

## Rationale: How does this CAP achieve its goals?

${RATIONALE}

## Path to Ratification

### Acceptance Criteria

${ACCEPTANCE}

### Implementation Plan

${IMPLEMENTATION}

## Versioning (Optional)

${VERSIONING}

## References (Optional)

${REFERENCES}

## Copyright

This CAP is licensed under [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/legalcode).
EOF

      - name: Commit and push CAP folder
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add CAP-${{ github.event.issue.number }} - ${TITLE}"
          file_pattern: "CAP-*/*"
