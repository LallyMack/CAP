name: Create CAP folder and README from Issue

on:
  issues:
    types: [opened]

jobs:
  generate-cap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate CAP folder and README
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          CAP_NUMBER=$(printf "%04d" ${{ github.event.issue.number }})
          FOLDER="CAP-${CAP_NUMBER}"
          FILE_PATH="${FOLDER}/README.md"
          DATE=$(date +%Y-%m-%d)
          REPO_URL="https://github.com/Thomas-nada/CAP/tree/main"

          mkdir -p "$FOLDER"

          # âœ… Title from issue title
          TITLE="$ISSUE_TITLE"
          TITLE=$(echo "$TITLE" | sed -E 's/^CAP[: ]*//')

          NORMALIZED_BODY=$(echo "$ISSUE_BODY" | tr -d '\r')

          # âœ… Multiline-safe parsing
          CATEGORY=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Category[^\n]*\n+([^\n#]+)/' | xargs)
          IMPLEMENTORS=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Implementors[^\n]*\n+([^\n#]+)/' | xargs)
          SOLUTION_TO=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Solution-To[^\n]*\n+([^\n#]+)/' | xargs)
          DISCUSSIONS=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Discussions[^\n]*\n+([^\n#]+)/' | xargs)
          ABSTRACT=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Abstract[^\n]*\n+([^\n#]+)/' | xargs)
          MOTIVATION=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Motivation[^\n]*\n+([^\n#]+)/' | xargs)
          SPECIFICATION=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Amendment Specification[^\n]*\n+([^\n#]+)/' | xargs)
          RATIONALE=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Rationale[^\n]*\n+([^\n#]+)/' | xargs)
          ACCEPTANCE=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Acceptance Criteria[^\n]*\n+([^\n#]+)/' | xargs)
          IMPLEMENTATION=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Implementation Plan[^\n]*\n+([^\n#]+)/' | xargs)
          VERSIONING=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /Versioning[^\n]*\n+([^\n#]+)/' | xargs)
          REFERENCES=$(echo "$NORMALIZED_BODY" | perl -0777 -ne 'print $1 if /References[^\n]*\n+([^\n#]+)/' | xargs)

          # âœ… Fallbacks
          [ -z "$CATEGORY" ] && CATEGORY="Governance"
          [ -z "$IMPLEMENTORS" ] && IMPLEMENTORS="_No response_"
          [ -z "$SOLUTION_TO" ] && SOLUTION_TO="N/A"
          [ -z "$DISCUSSIONS" ] && DISCUSSIONS="_No response_"
          [ -z "$ABSTRACT" ] && ABSTRACT="No response"
          [ -z "$MOTIVATION" ] && MOTIVATION="No response"
          [ -z "$SPECIFICATION" ] && SPECIFICATION="No response"
          [ -z "$RATIONALE" ] && RATIONALE="No response"
          [ -z "$ACCEPTANCE" ] && ACCEPTANCE="No response"
          [ -z "$IMPLEMENTATION" ] && IMPLEMENTATION="No response"
          [ -z "$VERSIONING" ] && VERSIONING="No response"
          [ -z "$REFERENCES" ] && REFERENCES="No response"

          # ðŸ§  Smart linking for Solution-To
          if [[ "$SOLUTION_TO" =~ ^GPS-[0-9]+$ ]]; then
            SOLUTION_TO_MARKDOWN="[${SOLUTION_TO}](${REPO_URL}/${SOLUTION_TO})"
          else
            SOLUTION_TO_MARKDOWN="$SOLUTION_TO"
          fi

          # ðŸ§  Smart linking for Discussions
          if [[ "$DISCUSSIONS" =~ ^https?:// ]]; then
            DISCUSSIONS_MARKDOWN="$DISCUSSIONS"
          else
            DISCUSSIONS_MARKDOWN="$DISCUSSIONS"
          fi

          # âœ… Write README.md with safe YAML
          {
            echo "---"
            echo "CAP: ${CAP_NUMBER}"
            echo "Title: \"${TITLE}\""
            echo "Category: \"${CATEGORY}\""
            echo "Status: Draft"
            echo "Authors:"
            echo "  - TBD"

            # âœ… Safe implementors handling
            if [ "$IMPLEMENTORS" = "_No response_" ] || [ -z "$IMPLEMENTORS" ]; then
              echo "Implementors: N/A"
            else
              echo "Implementors:"
              echo "  - ${IMPLEMENTORS}"
            fi

            echo "Solution-To:"
            echo "  - ${SOLUTION_TO_MARKDOWN}"
            echo "Discussions:"
            echo "  - \"${DISCUSSIONS_MARKDOWN}\""
            echo "Created: ${DATE}"
            echo "License: CC-BY-4.0"
            echo "---"
            echo ""
            echo "## Abstract"
            echo ""
            echo "${ABSTRACT}"
            echo ""
            echo "## Motivation: Why is this CAP necessary?"
            echo ""
            echo "${MOTIVATION}"
            echo ""
            echo "## Amendment Specification"
            echo ""
            echo "${SPECIFICATION}"
            echo ""
            echo "## Rationale: How does this CAP achieve its goals?"
            echo ""
            echo "${RATIONALE}"
            echo ""
            echo "## Path to Ratification"
            echo ""
            echo "### Acceptance Criteria"
            echo ""
            echo "${ACCEPTANCE}"
            echo ""
            echo "### Implementation Plan"
            echo ""
            echo "${IMPLEMENTATION}"
            echo ""
            echo "## Versioning (Optional)"
            echo ""
            echo "${VERSIONING}"
            echo ""
            echo "## References (Optional)"
            echo ""
            echo "${REFERENCES}"
            echo ""
            echo "## Copyright"
            echo ""
            echo "This CAP is licensed under [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/legalcode)."
          } > "$FILE_PATH"

      - name: Commit and push CAP folder
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add CAP-${{ github.event.issue.number }} - ${{ github.event.issue.title }}"
          file_pattern: "CAP-*/*"
