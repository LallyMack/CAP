name: Create CAP folder and README from Issue

on:
  issues:
    types: [opened]

jobs:
  generate-cap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate CAP folder and README
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          CAP_NUMBER=$(printf "%04d" ${{ github.event.issue.number }})
          FOLDER="CAP-${CAP_NUMBER}"
          FILE_PATH="${FOLDER}/README.md"
          DATE=$(date +%Y-%m-%d)
          REPO_URL="https://github.com/Thomas-nada/CAP/tree/main"

          mkdir -p "$FOLDER"

          # âœ… Title directly from GitHub metadata
          TITLE="$ISSUE_TITLE"
          TITLE=$(echo "$TITLE" | sed -E 's/^CAP[: ]*//')

          # âœ… Extract fields robustly (works even if form headings change)
          CATEGORY=$(echo "$ISSUE_BODY" | grep -A1 "Category" | tail -n1 | xargs)
          IMPLEMENTORS=$(echo "$ISSUE_BODY" | grep -A1 "Implementors" | tail -n1 | xargs)
          SOLUTION_TO=$(echo "$ISSUE_BODY" | grep -A1 "Solution-To" | tail -n1 | xargs)
          DISCUSSIONS=$(echo "$ISSUE_BODY" | grep -A1 "Discussions" | tail -n1 | xargs)
          ABSTRACT=$(echo "$ISSUE_BODY" | grep -A1 "Abstract" | tail -n1 | xargs)
          MOTIVATION=$(echo "$ISSUE_BODY" | grep -A1 "Motivation" | tail -n1 | xargs)
          SPECIFICATION=$(echo "$ISSUE_BODY" | grep -A1 "Amendment Specification" | tail -n1 | xargs)
          RATIONALE=$(echo "$ISSUE_BODY" | grep -A1 "Rationale" | tail -n1 | xargs)
          ACCEPTANCE=$(echo "$ISSUE_BODY" | grep -A1 "Acceptance Criteria" | tail -n1 | xargs)
          IMPLEMENTATION=$(echo "$ISSUE_BODY" | grep -A1 "Implementation Plan" | tail -n1 | xargs)
          VERSIONING=$(echo "$ISSUE_BODY" | grep -A1 "Versioning" | tail -n1 | xargs)
          REFERENCES=$(echo "$ISSUE_BODY" | grep -A1 "References" | tail -n1 | xargs)

          # âœ… Defaults
          [ -z "$CATEGORY" ] && CATEGORY="Governance"
          [ -z "$IMPLEMENTORS" ] && IMPLEMENTORS="N/A"
          [ -z "$SOLUTION_TO" ] && SOLUTION_TO="N/A"
          [ -z "$DISCUSSIONS" ] && DISCUSSIONS="N/A"
          [ -z "$ABSTRACT" ] && ABSTRACT="N/A"
          [ -z "$MOTIVATION" ] && MOTIVATION="N/A"
          [ -z "$SPECIFICATION" ] && SPECIFICATION="N/A"
          [ -z "$RATIONALE" ] && RATIONALE="N/A"
          [ -z "$ACCEPTANCE" ] && ACCEPTANCE="N/A"
          [ -z "$IMPLEMENTATION" ] && IMPLEMENTATION="N/A"
          [ -z "$VERSIONING" ] && VERSIONING="N/A"
          [ -z "$REFERENCES" ] && REFERENCES="N/A"

          # ðŸ§  Smart linking for Solution-To (now points to actual GitHub folder)
          if [[ "$SOLUTION_TO" =~ ^GPS-[0-9]+$ ]]; then
            SOLUTION_TO_MARKDOWN="[${SOLUTION_TO}](${REPO_URL}/${SOLUTION_TO})"
          else
            SOLUTION_TO_MARKDOWN="$SOLUTION_TO"
          fi

          echo "ðŸ“Œ Generating CAP-${CAP_NUMBER} - '$TITLE'"
          echo "ðŸ“Ž Solution-To parsed as: $SOLUTION_TO_MARKDOWN"

          # âœ… Write README.md
          echo "---" > "$FILE_PATH"
          echo "CAP: ${CAP_NUMBER}" >> "$FILE_PATH"
          echo "Title: \"${TITLE}\"" >> "$FILE_PATH"
          echo "Category: ${CATEGORY}" >> "$FILE_PATH"
          echo "Status: Draft" >> "$FILE_PATH"
          echo "Authors:" >> "$FILE_PATH"
          echo "  - TBD" >> "$FILE_PATH"
          echo "Implementors: ${IMPLEMENTORS}" >> "$FILE_PATH"
          echo "Solution-To:" >> "$FILE_PATH"
          echo "  - ${SOLUTION_TO_MARKDOWN}" >> "$FILE_PATH"
          echo "Discussions:" >> "$FILE_PATH"
          echo "  - ${DISCUSSIONS}" >> "$FILE_PATH"
          echo "Created: ${DATE}" >> "$FILE_PATH"
          echo "License: CC-BY-4.0" >> "$FILE_PATH"
          echo "---" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Abstract" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${ABSTRACT}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Motivation: Why is this CAP necessary?" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${MOTIVATION}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Amendment Specification" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${SPECIFICATION}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Rationale: How does this CAP achieve its goals?" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${RATIONALE}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Path to Ratification" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "### Acceptance Criteria" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${ACCEPTANCE}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "### Implementation Plan" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${IMPLEMENTATION}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Versioning (Optional)" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${VERSIONING}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## References (Optional)" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "${REFERENCES}" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"

          echo "## Copyright" >> "$FILE_PATH"
          echo "" >> "$FILE_PATH"
          echo "This CAP is licensed under [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/legalcode)." >> "$FILE_PATH"

      - name: Commit and push CAP folder
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add CAP-${{ github.event.issue.number }} - ${{ github.event.issue.title }}"
          file_pattern: "CAP-*/*"
